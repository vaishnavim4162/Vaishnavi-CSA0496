#include &lt;stdio.h&gt;
void firstFit(int blockSize[], int m, int processSize[], int n) {
int allocation[n];
for (int i = 0; i &lt; n; i++) {
allocation[i] = -1;
}
for (int i = 0; i &lt; n; i++) {
for (int j = 0; j &lt; m; j++) {
if (blockSize[j] &gt;= processSize[i]) {
allocation[i] = j;
blockSize[j] -= processSize[i];
break;
}
}
}
printf(&quot;Process No.\tProcess Size\tBlock no.\n&quot;);
for (int i = 0; i &lt; n; i++) {
printf(&quot;%d\t\t%d\t\t&quot;, i + 1, processSize[i]);
if (allocation[i] != -1) {
printf(&quot;%d\n&quot;, allocation[i] + 1);
} else {
printf(&quot;Not Allocated\n&quot;);
}
}
}

int main() {
int blockSize[] = {100, 500, 200, 300, 600};

int processSize[] = {212, 417, 112, 426};
int m = sizeof(blockSize) / sizeof(blockSize[0]);
int n = sizeof(processSize) / sizeof(processSize[0]);
firstFit(blockSize, m, processSize, n);
return 0;
}
